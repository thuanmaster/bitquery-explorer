<div class="col-12 col-lg-6 mb-4">
  <div class="card">
    <div class="card-header"><%= t('widgets.headers.address_statistics') %></div>
    <div class="card-body">
      <div class="text-center widgets-loading" id="loading"><div role="status" class="spinner-border text-info"><span class="sr-only"><%= t('loading') %></span></div></div>
      <div class="widgets-blur" id="container-data">
        <div class="table-responsive" id="table-data" style="display: none;">
          <table class="table table-striped table-hover table-sm widgets-table">
            <thead>
              <tr>
                <th class=""><%= t('widgets.titles.attribute') %></th>
                <th class=""><%= t('widgets.titles.property_value') %></th>
              </tr>
            </thead>
            <tbody>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  function loadDataTable() {
    const address = '<%= @address %>';
    const formatedAddress = web3.utils.toChecksumAddress(address);
    Promise.all([
      graphqlBlockScout(
        `query {\n  address(hash: \"${formatedAddress}\") {\n    fetchedCoinBalance\n    fetchedCoinBalanceBlockNumber\n  }\n}`,
        'address'
      ),
      queryBlockScout(`address-counters?id=${formatedAddress}`)
    ]).then(([amount, stat]) => {
      console.log('Promise.all', amount, stat);
      $('#table-data').show();
      tableBody = $("#table-data table tbody");
      tableBody.append(`<tr>
          <td class="text-info font-weight-bold" style="width: 130px;"><span class="text-info font-weight-bold"><%= t('widgets.titles.current_balance') %></span></td>
          <td class=" "><span>${numberWithCommas(formatNumber(Number(amount.fetchedCoinBalance) / Math.pow(10, 18)))} OPC</span></td>
        </tr>
        <tr>
          <td class="text-info font-weight-bold" style="width: 130px;"><span class="text-info font-weight-bold">Last Balance Update</span></td>
          <td class=" "><span><a href="/openchain/block/${amount.fetchedCoinBalanceBlockNumber}">#${amount.fetchedCoinBalanceBlockNumber}</a></span></td>
        </tr>
        <tr>
          <td class="text-info font-weight-bold" style="width: 130px;"><span class="text-info font-weight-bold">Gas used</span></td>
          <td class="ellipsis "><span>${numberWithCommas(stat.gas_usage_count)}</span></td>
        </tr>
        <tr>
          <td class="text-info font-weight-bold" style="width: 130px;"><span class="text-info font-weight-bold"><%= t('tabs.trc10token.transactions.name') %></span></td>
          <td class="ellipsis "><span>${numberWithCommas(stat.transaction_count)}</span></td>
        </tr>`);
      toogleLoading(false);
    })
    .catch(function(err) {
      toogleLoading(false);
      $('#container-data').html('No data');
    });
    // queryCseScan('wallet/<%= @address %>', '')
    // .then(function(data) {
    //   $('#table-data').show();
    //   console.log('query data', data);
    //   tableBody = $("#table-data table tbody");
    //   tableBody.append(`<tr>
    //       <td class="text-info font-weight-bold" style="width: 130px;"><span class="text-info font-weight-bold"><%= t('widgets.titles.current_balance') %></span></td>
    //       <td class=" "><span>${numberWithCommas(formatNumber(Number(data.free) / Math.pow(10, 8)))}</span></td>
    //     </tr>
    //     <tr>
    //       <td class="text-info font-weight-bold" style="width: 130px;"><span class="text-info font-weight-bold"><%= t('widgets.titles.tx_creates') %></span></td>
    //       <td class="ellipsis "><span>${m(Number(data.date+'000')).format('YYYY-MM-DD HH:mm:ss')}</span></td>
    //     </tr>`);
    //   toogleLoading(false);
    //   queryCseScan('transactions', `filters.method=NORMAL&filters.address=<%= @address %>&pagination.page=1&pagination.limit=5`)
    //   .then(function(data) {
    //     tableBody.append(`<tr>
    //         <td class="text-info font-weight-bold" style="width: 130px;"><span class="text-info font-weight-bold"><%= t('tabs.trc10token.transactions.name') %></span></td>
    //         <td class=" "><span>${numberWithCommas(Number(data.pagination.size))}</span></td>
    //       </tr>`);
    //   });
    //   queryCseScan('transactions', `filters.method=INITIAL_TOKEN&filters.method=TRANSFER_TOKEN&filters.address=<%= @address %>&pagination.page=1&pagination.limit=5`)
    //   .then(function(data) {
    //     tableBody.append(`<tr>
    //         <td class="text-info font-weight-bold" style="width: 130px;"><span class="text-info font-weight-bold"><%= t('tabs.token.transfers.name') %></span></td>
    //         <td class=" "><span>${numberWithCommas(Number(data.pagination.size))}</span></td>
    //       </tr>`);
    //   });
    // })
    // .catch(function(err) {
    //   toogleLoading(false);
    //   $('#container-data').html('No data');
    // });
  }

    $( document ).ready(function() { 
      loadDataTable();
        // var query = new widgets.query(`query (
        //                       $height: Int!){
        //                   tron{

        //                       blocks(height: {is: $height}){
        //                         timestamp {
        //                           time (format: "%Y-%m-%d %H:%M:%S")
        //                         }
        //                         version
        //                         hash
        //                         witness {
        //                           address
        //                           annotation
        //                         }
        //                       }
        //                     }
        //                 }`);



        // new widgets.table('#block_info', query, 'tron.blocks', {
        //     title: '<%= t('widgets.headers.block_info') %>',
        //     renderData: function (data) {
        //         item = data[0];
        //         return !item ? [] : [
        //             {name: '<%= t('widgets.titles.timestamp') %>', value: item.timestamp.time},
        //             {name: '<%= t('widgets.titles.witness') %>', value: (item.witness.annotation || item.witness.address), address: item.witness},
        //             {name: '<%= t('widgets.titles.version') %>', value: item.version},
        //             {name: '<%= t('widgets.titles.hash') %>', value: item.hash}
        //         ];
        //     },
        //     dataOptions: [
        //         {
        //             title: '<%= t('widgets.titles.attribute') %>',
        //             type: 'string',
        //             path: 'name',
        //             style: 'width: 110px',
        //             html_class: 'text-info font-weight-bold'
        //         },
        //         {
        //             title: '<%= t('widgets.titles.property_value') %>',
        //             type: 'string-ellipsis',
        //             path: 'value',
        //             urlCallbackName: 'property_value_path'
        //         },
        //     ]
        // });

        // query.request({

        //     height: <%= @height %>
        // });

    });
</script>