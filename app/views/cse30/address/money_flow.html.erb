<div class="row">
  <div class="col-12 col-lg-12 mb-4">
    <div class="card">
      <div class="card-header">
        <div class="choice-view">
          <input class="choice-view__radio" type="radio" name="view" id="graph-radio" value="graph" onclick="$('#graph').parents('.card-body').show();$('#sankey-graph').parents('.card-body').hide()" checked>
          <label class="choice-view__label" for="graph-radio">Graph</label>
        </div>
        <div class="choice-view">
          <input class="choice-view__radio" type="radio" name="view" id="sankey-radio" value="sankey" onclick="$('#sankey-graph').parents('.card-body').show();$('#graph').parents('.card-body').hide()">
          <label class="choice-view__label" for="sankey-radio">Sankey</label>
        </div>
      </div>
      <div class="card-body" style="padding: 0">
        <div id="graph" style="width: 100%;"></div>
      </div>
      <div class="card-body" style="padding: 0; display: none;">
        <div id="sankey-graph" style="width: 100%;"></div>
      </div>
    </div>
  </div>
  <script>
      $(document).ready(function() {
          const query = new graphs.query(`
query ( $address: String!, $inboundDepth: Int!, $outboundDepth: Int!, $limit: Int!, $currency: String!, $from: ISO8601DateTime, $till: ISO8601DateTime) {
  tron{
    inbound: coinpath(initialAddress: {is: $address}, currency:{is: $currency}, depth: {lteq: $inboundDepth}, options: {direction: inbound, asc: "depth", desc: "amount", limitBy: {each: "depth", limit: $limit}}, date:{since: $from, till: $till}) {
      sender {
        address
        annotation
        smartContract {
          contractType
          currency {
            symbol
            name
          }
        }
      }
      receiver {
        address
        annotation
        smartContract {
          contractType
          currency {
            symbol
            name
          }
        }
      }
      amount
      currency{symbol}
      depth
      count
    }
    outbound: coinpath(initialAddress: {is: $address}, currency:{is: $currency}, depth: {lteq: $outboundDepth}, options: {asc: "depth", desc: "amount", limitBy: {each: "depth", limit: $limit}}, date:{since: $from, till: $till}) {
      sender {
        address
        annotation
        smartContract {
          contractType
          currency {
            symbol
            name
          }
        }
      }
      receiver {
        address
        annotation
        smartContract {
          contractType
          currency {
            symbol
            name
          }
        }
      }
      amount
      currency{symbol}
      depth
      count
    }
  }
}
`)

          new graphs.address_graph('#graph', query, {
              theme: '<%= @theme %>',
          })

          new graphs.addControls('#graph', query, {
              theme: '<%= @theme %>',
              currencies: [<%= @currencies.collect{|cur|
            if cur.token_id == '0' and cur.address == '-'
              value = cur.symbol
            elsif cur.token_id == '0'
              value = cur.address
            else
              value = cur.token_id
            end
            "{address:\"#{cur.address}\",token_id:\"#{cur.token_id}\",symbol:\"#{cur.symbol.gsub('"','')}\",name:\"#{cur.name.gsub('"','')}\",search:\"#{value}\"}"
            }.join(',').html_safe %>],
          })

          new graphs.address_sankey('#sankey-graph', query, {
              theme: '<%= @theme %>',
          })

          new graphs.addControls('#sankey-graph', query, {
              theme: '<%= @theme %>',
              currencies: [<%= @currencies.collect{|cur|
            if cur.token_id == '0' and cur.address == '-'
              value = cur.symbol
            elsif cur.token_id == '0'
              value = cur.address
            else
              value = cur.token_id
            end
            "{address:\"#{cur.address}\",token_id:\"#{cur.token_id}\",symbol:\"#{cur.symbol.gsub('"','')}\",name:\"#{cur.name.gsub('"','')}\",search:\"#{value}\"}"
            }.join(',').html_safe %>],
          })

          queryWithTimeRange(rr, query, <%= @from.html_safe %>, <%= @till.html_safe %>, {"inboundDepth": 1, "outboundDepth": 1, "limit": 10, "offset": 0, "address": "<%= @address %>", "currency": "<%= @currencies.first && (@currencies.first.address == '-' ? @currencies.first.symbol : @currencies.first.address) %>"})
      })
  </script>
</div>