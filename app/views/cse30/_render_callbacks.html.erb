<script>
    widgets.callbacks({
        token_path: function(item){
            if(item.currency.tokenType=='TRC10') {
                return '<%= locale_path_prefix %><%= @network[:network] %>/trc10token/'+  item.currency.tokenId;
            } else  if (item.currency.tokenType=='TRC20'){
                return '<%= locale_path_prefix %><%= @network[:network] %>/trc20token/'+  item.currency.address;
            }else{
                return '<%= locale_path_prefix %><%= @network[:network] %>/trc20token/'+  item.currency.symbol;
            }

        },
        transfer_to_path: function(item){
            if(item.count_in==0) {
                return null;
            }else{
                return '<%= locale_path_prefix %><%= @network[:network] %>'+'/txs/transfers?receiver=<%= @address %>&currency='+
                    (item.currency.address=='-' && item.currency.tokenId=='0' ? item.currency.symbol : (item.currency.tokenId=='0' ? item.currency.address : item.currency.tokenId )) +
                    (item.address ? '&sender='+item.address.address : '');
            }
        },
        transfer_from_path: function(item){
            if(item.count_out==0) {
                return null;
            }else {
                return '<%= locale_path_prefix %><%= @network[:network] %>/txs/transfers?sender=<%= @address %>&currency=' +
                    (item.currency.address=='-' && item.currency.tokenId=='0' ? item.currency.symbol : (item.currency.tokenId=='0' ? item.currency.address : item.currency.tokenId )) +
                    (item.address ? '&receiver='+item.address.address : '');
            }
        },
        transfer_token_sender_path: function(item){
            return '<%= locale_path_prefix %><%= @network[:network] %>/txs/transfers?currency=<%= @address %>&sender='+item.sender.address;
        },
        transfer_token_receiver_path: function(item){
            return '<%= locale_path_prefix %><%= @network[:network] %>/txs/transfers?currency=<%= @address %>&receiver='+item.receiver.address;
        },
        smart_contract_method_path: function(item){
            return '<%= locale_path_prefix %><%= @network[:network] %>'+'/method/'+item.smartContractMethod.signatureHash;
        },
        smart_contract_event_path: function(item){
            return '<%= locale_path_prefix %><%= @network[:network] %>'+'/event/'+item.smartContractEvent.signatureHash;
        },
        address_path: function(item){
                return '<%= locale_path_prefix %><%= @network[:network] %>'+'/address/'+item.address.address;
        },
        owner_address_path: function(item){
            return '<%= locale_path_prefix %><%= @network[:network] %>'+'/address/'+item.txOwner.address;
        },
        seller_address_path: function(item){
            return '<%= locale_path_prefix %><%= @network[:network] %>' + '/address/' + item.seller.address;
        },
        buyer_address_path: function(item){
            return '<%= locale_path_prefix %><%= @network[:network] %>' + '/address/' + item.buyer.address;
        },
        buy_token_path: function(item){
            if(item.buyCurrency.tokenType=='TRC10') {
                return '<%= locale_path_prefix %><%= @network[:network] %>/trc10token/'+  item.buyCurrency.tokenId;
            } else  if (item.buyCurrency.tokenType=='TRC20'){
                return '<%= locale_path_prefix %><%= @network[:network] %>/trc20token/'+  item.buyCurrency.address;
            }else{
                return '<%= locale_path_prefix %><%= @network[:network] %>/trc20token/'+  item.buyCurrency.symbol;
            }
        },
        sell_token_path: function(item){
            if(item.sellCurrency.tokenType=='TRC10') {
                return '<%= locale_path_prefix %><%= @network[:network] %>/trc10token/'+  item.sellCurrency.tokenId;
            } else  if (item.sellCurrency.tokenType=='TRC20'){
                return '<%= locale_path_prefix %><%= @network[:network] %>/trc20token/'+  item.sellCurrency.address;
            }else{
                return '<%= locale_path_prefix %><%= @network[:network] %>/trc20token/'+  item.sellCurrency.symbol;
            }
        },
        sender_address_path: function(item){
            if (item.sender.address!='0x0000000000000000000000000000000000000000') {
                return '<%= locale_path_prefix %><%= @network[:network] %>' + '/address/' + item.sender.address;
            }
        },
        receiver_address_path: function(item){
            if (item.receiver.address!='0x0000000000000000000000000000000000000000') {
                return '<%= locale_path_prefix %><%= @network[:network] %>' + '/address/' + item.receiver.address;
            }
        },
        block_path: function(item){
            return '<%= locale_path_prefix %><%= @network[:network] %>'+'/block/'+(item.height || item.block.height);
        },
        transaction_path: function(item){
            return '<%= locale_path_prefix %><%= @network[:network] %>'+'/tx/'+ (item.hash || item.txHash);
        },
        smart_contract_path: function(item){
            if (item.smartContract.address.address!='0x0000000000000000000000000000000000000000') {
                return '<%= locale_path_prefix %><%= @network[:network] %>' + '/smart_contract/' + item.smartContract.address.address;
            }
        },
        call_count_path: function(item){
            return '<%= locale_path_prefix %><%= @network[:network] %>/txs/calls?caller=<%= @address %>&contract=' + item.smartContract.address.address;
        },
        call_method_count_path: function(item){
            return '<%= locale_path_prefix %><%= @network[:network] %>/txs/calls?contract=<%= @address %>&method=' + item.smartContractMethod.signatureHash;
        },
        event_count_path: function(item){
            return '<%= locale_path_prefix %><%= @network[:network] %>/txs/events?contract=<%= @address %>&event=' + item.smartContractEvent.signatureHash;
        },
        internal_call_method_count_path: function(item){
            return '<%= locale_path_prefix %><%= @network[:network] %>/txs/calls?internal=true&contract=<%= @address %>&method=' + item.smartContractMethod.signatureHash;
        },
        external_call_method_count_path: function(item){
            return '<%= locale_path_prefix %><%= @network[:network] %>/txs/calls?internal=false&contract=<%= @address %>&method=' + item.smartContractMethod.signatureHash;
        },
        call_by_caller_count_path: function(item){
            return '<%= locale_path_prefix %><%= @network[:network] %>/txs/calls?contract=<%= @address %>&caller='+item.address.address;
        },
        property_value_path: function(item){
            if (item.address && item.address.address!='0x0000000000000000000000000000000000000000' ) {
                return '<%= locale_path_prefix %><%= @network[:network] %>' + '/address/' + item.address.address;
            } else if (item.block ){
                return '<%= locale_path_prefix %><%= @network[:network] %>'+'/block/'+item.block.height;
            }else{
                return null;
            }

        },

    });

</script>